#Installing and calling requiered packages
install.packages("terra")
library(terra)
install.packages("raster")
library(raster)
install.packages("sp")
library(sp)
install.packages("sf")
library(sf)
install.packages("nngeo")
library(nngeo)
install.packages("smoothr")
library(smoothr)

##Crop a raster layer from extention
#In this example the raster layer used was download from Worldclim water vapor presure monthly data

#First setting the target extention, in this case a huge extension in South America
e<-ext(-92.009224323714,-30,-34.974198788153,15.6711101314651)

#Now charging the raster layer to R
r<-rast("wc2.1_30s_vapr_01.tif")
plot(r)

#Finally, cropping the layer
rc<-crop(r,e)
plot(rc)

##Cropping multiple rasters
#In this example the raster layers used were taken from Worldclim solar radiation monthly data
#First creating a variable that contains all the raster layers and setting the extention for the cycle below
directory<-setwd("C:/Capas SIG/wc2.1_30s_srad")
layers<-list.files(directory, pattern=".tif",full.names=TRUE)
e<-ext(-92.009224323714,-30,-34.974198788153,15.6711101314651)

#This cycle crops each of the month data layers.
#At the end layers are merged for having only one raster layer for the annual mean
for (i in 1:(length(layers)+1)) {
  if (i == 1) {
    sri<- rast(layers[i])
    srci<-crop(sri, e)
    x<-c(srci)
  }else if (i > 1 && i <= length(capa_JV)) {
    sri<- rast(layers[i])
    srci<-crop(sri, e)
    x<-c(x,srci)
  }else{
    y<-as.list(x)
    srjoin<-sprc(y)
    srad<-mosaic(srjoin,fun="mean")
    plot(srad)
  }
}

#This save the final layer in the working directory as a TIF file
writeRaster(srad,"srad.tif")

#If you want to write each raster layer, not merging them, first quit "srjoin<-sprc(y), srad<-mosaic(srjoin,fun="mean"), plot(srad)" lines. The you can use this code in the final else append of the cycle
lapply(y, writeRaster(x, filename=paste0("C:/SIG/Capas/",names(x),".tif")))

##Mask a raster layer with shape polyong

#First you need to have a shapefile with your area, if not, the sectiong below will help yo create a shape file froms raster data
pna<-vect("Area.shp")

#Firs, crop raster as commented above, only with extention
cropped <- crop(wind, extent(pna))

#Now, with function you can take the cropped by extention layer and giving the same geom of the shape polygon
masked<-mask(cropped,pna)
plot(masked)

##Creating shape polyogn from raster layer area
#This example will be done used the Argentina Atlantic Forest land cover from Mapbiomas 
Arg<-rast(mapbiomas-atlantic-forest-collection-30-argentina-2021.tif)

#Here this codes make two different polygons, one by the whole extention and the other where there are no NULL values
pe <- as.polygons(ext(Arg)) #Whole extent
pr <- as.polygons(Arg > 0,round=FALSE, aggregate=TRUE, values=TRUE) #Without null values

#Plotting each one for seeing the differences
plot(ARG)
plot(pe, lwd=5, border='red', add=TRUE)
plot(pr, lwd=3, border='blue', add=TRUE)

#Its mandatory to transform the format of the layer before saving it. For this is used the sf package
pn<-st_as_sf(pr)
plot(pn)

#Since some raster layers can have holes inside of its extension, for example when merging two adjacent rasters, its neccesary to remove holes inside the shape for not having issue with cropping other raster with polygon layer
#Here two ways, first with nngeo package. This will remove every blank space
pna<-st_remove_holes(pn)
plot(pna)

#Now with smoothr package. This will remove blank spaces from adjacent cells using a treshold
area_thresh <- units::set_units(1000, km^2)
pna <- fill_holes(pr, threshold = area_thresh)

#finally write the polygon as a shape file
st_write(pna, "ARG.shp")

##Masking multiple rasters
#Here I put a cycle for masking two or more raster layers with a cycle. This was constructed with layers created above 
d_JV<-setwd("C:/Users/Capas SIG/wc2.1_30s_bio")
capa_JV <-list.files(d_JV, pattern=".tif$",full.names=TRUE)

for (i in 1:(length(capa_JV)+1)) {
  if (i == 1) {
    sri<- rast(capa_JV[i])
    cbioi<-crop(sri, ext(pna))
    mbioi<-mask(cbioi,pna)
    x<-c(mbioi)
  }else if (i > 1 && i <= length(capa_JV)) {
    sri<- rast(capa_JV[i])
    cbioi<-crop(sri, ext(pna))
    mbioi<-mask(cbioi,pna)
    x<-c(x,mbioi)
  }else{
    y<-as.list(x)
    lapply(y, writeRaster(x, filename=paste0("C:/Users/Rolli/OneDrive - Pontificia Universidad Javeriana/MaestrÃ­a/Tesis/SIG/Capas/",names(x),".tif")))
  }
}
